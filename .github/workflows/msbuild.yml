name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup premake
      uses: abel0b/setup-premake@v2.1
      with:
          version: "5.0.0-beta1"

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Generate premake5 project
      run: premake5 vs2019
      shell: bash

    - name: Build 64bit release DLL
      run: |
       msbuild /p:Configuration=Release /p:Platform=x64 BigBaseV2.sln /warnaserror
       
    - name: Rename DLL to YimMenu.dll
      run: ren BigBaseV2.dll YimMenu.dll
      working-directory: bin/Release/
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
         name: binary
         path: |
           bin/Release/YimMenu.dll

    - name: Generate Build Info
      id: var
      run: |
          echo "::set-output name=full_sha::$(git rev-parse HEAD)"
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
