name: Dev Build

on:
  schedule:
    # cronjob that triggers every day at 6PM UTC
    - cron: '0 18 * * *'
  workflow_dispatch:

jobs:
  build_dev:
    runs-on: windows-latest
    name: Build Dev
    outputs:
      full_sha: ${{ steps.var.outputs.full_sha }}
      short_sha: ${{ steps.var.outputs.short_sha }}
    steps:
      #- uses: actions/checkout@v2.4.0
      #  with:
      #    submodules: recursive

      #- name: Setup .NET Core SDK
      #  uses: actions/setup-dotnet@v2.1.0
      #  with:
      #    dotnet-version: 6.0.x

      - name: Setup premake
        uses: abel0b/setup-premake@v2.1
        with:
          version: "5.0.0-beta1"

      - name: Setup MSBuild environment
        uses: microsoft/setup-msbuild@v1.1

      - name: Clone repository
        run: |
         git clone https://github.com/YimMenu/YimMenu.git --recurse-submodules
        working-directory: YimMenu

      - name: Check repository for latest changes
        run: |
         git pull && git submodule update
        working-directory: YimMenu

      - name: Generate premake5 project
        run: |
         premake5 vs2019
        shell: bash
        working-directory: YimMenu

      - name: Restore dependencies
        run: |
         msbuild BigBaseV2.sln /t:Restore /p:Configuration=Release
        working-directory: YimMenu

      - name: Build 64bit release DLL
        run: |
         msbuild /p:Configuration=Release /p:Platform=x64 BigBaseV2.sln -m /warnaserror
        working-directory: YimMenu

      - name: Check if DLL got built
        run: |
         if (-Not (Test-Path -path "bin/Release/BigBaseV2.dll")) {throw 1}
        working-directory: YimMenu

      - name: Rename DLL to YimMenu-dev-{GITHUB_SHA}.dll
        run: |
         ren BigBaseV2.dll YimMenu-dev-${{github.sha}}.dll
        working-directory: YimMenu/bin/Release/

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary
          path: |
           YimMenu/bin/Release/YimMenu-dev-*.dll

      - name: Generate Build Info
        id: var
        run: |
         echo "::set-output name=full_sha::$(git rev-parse HEAD)"
         echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
        working-directory: YimMenu

  check_detections:
    runs-on: ubuntu-latest
    name: Check for detections in Binary and notify if necesarry
    needs: build_dev
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: binary

      - name: Test file for detected bits
        id: detections
        uses: Yimura/gtav-sigscan-action@v0.0.3
        with:
          file: ./YimMenu-dev-*.dll

  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    needs: build_dev
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v3

      - id: should_run
        continue-on-error: true
        name: Check if latest commit date is within the previous 24 hours
        if: ${{ github.event_name == 'schedule' }}
        run: |
         test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  create_release:
    runs-on: ubuntu-latest
    name: Create Release
    needs: [ check_date, build_dev ]
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: binary

      - name: Echo build sha256
        id: build_sha
        run: |
          sha256sum YimMenu-dev-*.dll > sha256.checksum
          echo "::set-output name=build_sha::$(cat sha256.checksum)"
          cat sha256.checksum

      - name: Remove previous Nightly
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Nightly Release
        uses: softprops/action-gh-release@v1
        with:
          name: Nightly [${{ needs.build_dev.outputs.short_sha }}]
          tag_name: nightly
          body: |
            **This release has been build by Github Actions**
            [Link to build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Build SHA256:
            ```
            ${{ steps.build_sha.outputs.build_sha }}
            ```
            To verify the build SHA256 during the action, click the build link, go-to "Create Release", open the Echo build sha256 step and read the sha256.

            Compare this build hash with one that you generated yourself from the build artifacts.
            Alternatively you can download the build artifacts, generate a SHA256 checksum and compare it with the below binary.
            Build artifacts ARE NOT automatically the same as release assets since release assets can be modified afterwards.

            These are nightly builds of YimMenu, they are provided for testing purposes only:
            - Test if your build environment produces a broken BigBaseV2.dll
            - Test if source code is out of date and no longer compatible with the current version of GTA V

            If you wish to use this menu as-is you are on your own, no warranty is provided.

            Full Commit Hash:
            ```
            ${{ needs.build_dev.outputs.full_sha }}
            ```
          files: |
            YimMenu-dev-${{github.sha}}.dll
